datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["rhel-openssl-1.0.x", "windows"]
  previewFeatures = ["relationJoins", "fullTextSearchPostgres"]
}

model Author {
  id         String      @id @default(cuid())
  firstName  String
  lastName   String
  books      Product[]   @relation(name: "AuthorToProduct")
  publishers Publisher[] @relation(name: "AuthorToPublisher")
}

model Product {
  id          String        @id @default(cuid())
  ISBN        String?       @unique
  title       String        @unique
  price       Decimal       @default(0.0)
  publishedOn DateTime?
  images      String[]
  description String
  sold_pieces Int
  available   Int
  page_num    Int?
  type        TYPE
  visibleFlag Boolean
  authorId    String?
  currencyId  String
  publisherId String?
  providerId  String
  saleId      String?
  author      Author?       @relation(name: "AuthorToProduct", fields: [authorId], references: [id], onDelete: Cascade)
  publisher   Publisher?    @relation(name: "ProductToPublisher", fields: [publisherId], references: [id], onDelete: Cascade)
  currency    Currency      @relation(name: "CurrencyToProduct", fields: [currencyId], references: [id], onDelete: Cascade)
  sale        Sale?         @relation(name: "ProductToSale", fields: [saleId], references: [id], onDelete: Cascade)
  provider    Provider      @relation(fields: [providerId], references: [id], onDelete: Cascade)
  OrderDetail OrderDetail[]
}

model Publisher {
  id     String    @id @default(cuid())
  title  String
  books  Product[] @relation(name: "ProductToPublisher")
  author Author[]  @relation(name: "AuthorToPublisher")
}

model Currency {
  id          String    @id @default(cuid())
  name        String    @unique
  shortName   String    @unique
  visibleFlag Boolean
  books       Product[] @relation(name: "CurrencyToProduct")
}

model Sale {
  id       String    @id @default(cuid())
  percent  Int
  products Product[] @relation(name: "ProductToSale")
}

model Provider {
  id          String    @id @default(cuid())
  type        COUNTRY
  address     String
  name        String
  contactInfo String?
  products    Product[]
}

model User {
  id      String  @id @default(cuid())
  clerkId String
  orders  Order[]
}

model Address {
  id          String  @id @default(cuid())
  county      String
  city        String
  street      String
  postalCode  String
  phoneNumber String
  name        String
  orders      Order[]
}

model Order {
  id        String        @id @default(cuid())
  subtotal  Int
  createdAt DateTime      @default(now())
  userId    String?
  user      User?         @relation(fields: [userId], references: [id])
  details   OrderDetail[]
  Address   Address       @relation(fields: [addressId], references: [id])
  addressId String
}

model OrderDetail {
  id        String  @id @default(cuid())
  quantity  Int
  price     Decimal @default(0.0)
  orderId   String
  productId String
  Product   Product @relation(fields: [productId], references: [id])
  Order     Order   @relation(fields: [orderId], references: [id])
}

enum TYPE {
  BOOK
  FIGURINE
  NOTEBOOKS
  PENS
}

enum COUNTRY {
  ROMANIA
  USA
  GERMANY
  FRANCE
  CANADA
}
